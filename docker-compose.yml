version: '3.5'
services:

# ============================================================================
# ============================================================================
#                           AUTOTRUCK-TRUCKTRIX WEB APP
# ============================================================================
# ============================================================================

    yard_automation_app:
        image: autotruck/autotruck_webclient:2.0.0-rc16

        ports: 
            - 3080:3080            
                
        command: ["node", "express.js"]

        networks:
            - control-tower-net
            


# ============================================================================
# ============================================================================
#                  LOCAL PATH PLANNER - WHEN TRUCKTRIX IS NOT AVAILABLE
# ============================================================================
# ============================================================================

    local_planner_service:
        build: 
            context: ./microservices/clothoid_path_planner
            dockerfile: Dockerfile

        container_name: local_planner_service

        ports:
        - "9000:9000"

        restart: always

        networks:
        - control-tower-net

        volumes:
            - ./microservices/clothoid_path_planner/:/app




# # ============================================================================
# # ============================================================================
    # #                       TRUCK SIMULATOR - TRUCK + TRAILER 
# # ============================================================================
# # ============================================================================


    agent_simulator_1:
        image: helyosframework/helyos_agent_slim_simulator:0.5.3

        volumes:
            - ./geometry_tractor.json:/app/geometry.json
            
        environment:

            # AGENT ID
            - UUID=Ab34069fc5-fdgs-434b-b87e-f19c5435113 
            - ASSIGNMENT_FORMAT=autotruck-path  # fixed | trajectory | straight_to_destination | autotruck-path 
            - NAME=MY_TRACTOR
            - X0=-32000
            - Y0=0
            - ORIENTATION=0.329
            - VELOCITY=1.8 
            - VEHICLE_PARTS=2

            # RABBITMQ 
            - RABBITMQHOST=local_message_broker 
            - RABBITMQPORT=5672
            - REGISTRATION_TOKEN=0001-0002-0003-0000-0004

        networks:
            - control-tower-net   

        depends_on:
            - helyos_core     

        command: ["python","-u", "main.py"]

        deploy:
            restart_policy:
                condition: on-failure
                delay: 15s
                max_attempts: 5
                window: 60s    


    agent_simulator_2:
        image: helyosframework/helyos_agent_slim_simulator:0.5.3

        volumes:
            - ./geometry_truck.json:/app/geometry.json
            
        environment:

            # AGENT ID
            - UUID=Bb34069fc5-fdgs-434b-b87e-f19c5435113 
            - ASSIGNMENT_FORMAT=autotruck-path  # fixed | trajectory | straight_to_destination | autotruck-path 
            - NAME=MY_TRUCK
            - X0=-30000
            - Y0=10000
            - ORIENTATION=0.329
            - VELOCITY=1.8 
            - VEHICLE_PARTS=2

            # RABBITMQ 
            - RABBITMQHOST=local_message_broker 
            - RABBITMQPORT=5672
            - REGISTRATION_TOKEN=0001-0002-0003-0000-0004

        networks:
            - control-tower-net   

        depends_on:
            - helyos_core     

        command: ["python","-u", "main.py"]

        deploy:
            restart_policy:
                condition: on-failure
                delay: 15s
                max_attempts: 5
                window: 60s    


# # ============================================================================
# # ============================================================================
# #                          MESSAGE-BROKER - RABBITMQ 
# # ============================================================================
# # ============================================================================

    local_message_broker:
        image:  rabbitmq:3-management

        ports: 
            - 5672:5672          
            - 15672:15672        

        networks:
            - control-tower-net





# # ============================================================================
# # ============================================================================
# #                           HELYOS - SYSTEM INTEGRATION
# # ============================================================================
# # ============================================================================
    db:
        image: postgres:12
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            POSTGRES_HOST_AUTH_METHOD: "trust"
        networks:
            - control-tower-net


    helyos_core:
        image: helyosframework/helyos_core:2.0.0-rc28

        ports:
            - 5002:5002  # Websocket
            - 5000:5000  # GraphQL
            - 8080:8080  # HelyOS Dashboard


        volumes:
            - ./settings/config:/config/
            - ./settings/db_initial_data/:/db_initial_data/
            - ./settings/rsa_keys/helyos_private.key:/.ssl_keys/helyos_private.key:ro

        environment:
            # DATABASE 
            - PGUSER=postgres 
            - PGPASSWORD=null
            - PGHOST=db 
            - PGDATABASE=autotruck 
            - PGPORT=5432
            
            # GRAPHQL VARIABLES
            - GQLPORT=5000

            # RABBITMQ 
            - RBMQ_HOST=local_message_broker 
            - RBMQ_PORT=5672
            - RBMQ_API_PORT=15672       


            # RBMQ ACCOUNTS
            - CREATE_RBMQ_ACCOUNTS=True
            - RBMQ_ADMIN_USERNAME=${HELYOS_RBMQ_USERNAME} # set if CREATE_RBMQ_ACCOUNTS is True
            - RBMQ_ADMIN_PASSWORD=${HELYOS_RBMQ_PASSWORD} # set if CREATE_RBMQ_ACCOUNTS is True
            - AGENT_AUTO_REGISTER_TOKEN=0001-0002-0003-0000-0004

        networks:
            - control-tower-net

        depends_on:
            - db
            - local_message_broker




networks:
    control-tower-net:
       external: false
           

volumes:
    postgres_data:
        external: false
